diff --git a/shadowsocks/common.py b/shadowsocks/common.py
index ee14995..267464e 100644
--- a/shadowsocks/common.py
+++ b/shadowsocks/common.py
@@ -172,6 +172,7 @@ def parse_header(data):
             header_length = 7
         else:
             logging.warn('header is too short')
+            return None
     elif addrtype & ADDRTYPE_MASK == ADDRTYPE_HOST:
         if len(data) > 2:
             addrlen = ord(data[1])
@@ -182,8 +183,10 @@ def parse_header(data):
                 header_length = 4 + addrlen
             else:
                 logging.warn('header is too short')
+                return None
         else:
             logging.warn('header is too short')
+            return None
     elif addrtype & ADDRTYPE_MASK == ADDRTYPE_IPV6:
         if len(data) >= 19:
             dest_addr = socket.inet_ntop(socket.AF_INET6, data[1:17])
@@ -191,9 +194,11 @@ def parse_header(data):
             header_length = 19
         else:
             logging.warn('header is too short')
+            return None
     else:
         logging.warn('unsupported addrtype %d, maybe wrong password or '
                      'encryption method' % addrtype)
+        return None
     if dest_addr is None:
         return None
     return addrtype, to_bytes(dest_addr), dest_port, header_length
diff --git a/shadowsocks/encrypt.py b/shadowsocks/encrypt.py
index ece72ec..cf0d29d 100644
--- a/shadowsocks/encrypt.py
+++ b/shadowsocks/encrypt.py
@@ -123,6 +123,8 @@ class Encryptor(object):
             return buf
         if self.decipher is None:
             decipher_iv_len = self._method_info[1]
+            if len(buf) < decipher_iv_len:
+                return b''
             decipher_iv = buf[:decipher_iv_len]
             self.decipher_iv = decipher_iv
             self.decipher = self.get_cipher(self.password, self.method, 0,
